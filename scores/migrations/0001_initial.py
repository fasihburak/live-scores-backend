# Generated by Django 4.2 on 2025-05-15 19:17

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('scope', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('minute', models.IntegerField()),
                ('detail', models.CharField(max_length=250)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('match_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('to_be_scheduled', 'To Be Scheduled'), ('scheduled', 'Scheduled'), ('ongoing', 'Ongoing'), ('finished', 'Finished'), ('postponed', 'Postponed')], default='to_be_scheduled', max_length=20)),
                ('first_team_goals_scored', models.IntegerField()),
                ('second_team_goals_scored', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('given_name', models.CharField(max_length=200)),
                ('middle_name', models.CharField(max_length=200)),
                ('family_name', models.CharField(max_length=200)),
                ('birth_date', models.DateField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='scores.event')),
                ('color', models.CharField(choices=[('yellow', 'Yellow'), ('red', 'Red')], max_length=10)),
            ],
            options={
                'abstract': False,
            },
            bases=('scores.event',),
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='scores.event')),
                ('goal_type', models.CharField(choices=[('penalty', 'Penalty'), ('freekick', 'Freekick'), ('open_play', 'Open Play'), ('own_goal', 'Own Goal')], default='open_play', max_length=10)),
            ],
            options={
                'abstract': False,
            },
            bases=('scores.event',),
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('logo', models.ImageField(upload_to='')),
                ('name', models.CharField(max_length=200)),
                ('competitions', models.ManyToManyField(to='scores.competition')),
                ('people', models.ManyToManyField(to='scores.person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='scores.match')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='scores.person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='person',
            name='teams',
            field=models.ManyToManyField(to='scores.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='first_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='matches_home', to='scores.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='second_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='matches_away', to='scores.team'),
        ),
        migrations.AddField(
            model_name='event',
            name='match',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='scores.match'),
        ),
        migrations.AddField(
            model_name='event',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='scores.person'),
        ),
        migrations.AddField(
            model_name='competition',
            name='teams',
            field=models.ManyToManyField(to='scores.team'),
        ),
        migrations.CreateModel(
            name='Exit',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='scores.event')),
                ('other_player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='scores.person')),
            ],
            options={
                'abstract': False,
            },
            bases=('scores.event',),
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='scores.event')),
                ('other_player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='scores.person')),
            ],
            options={
                'abstract': False,
            },
            bases=('scores.event',),
        ),
    ]
