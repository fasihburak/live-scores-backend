# Generated by Django 4.2 on 2025-07-24 14:03

from django.db import migrations, models
import django.db.models.deletion
import scores.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('scope', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('match_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('to_be_scheduled', 'To Be Scheduled'), ('scheduled', 'Scheduled'), ('ongoing', 'Ongoing'), ('finished', 'Finished'), ('postponed', 'Postponed')], default='to_be_scheduled', max_length=20, null=True)),
                ('first_team_goals_scored', models.IntegerField(blank=True, null=True)),
                ('second_team_goals_scored', models.IntegerField(blank=True, null=True)),
                ('competition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='scores.competition')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('given_name', models.CharField(max_length=200)),
                ('middle_name', models.CharField(blank=True, max_length=200, null=True)),
                ('family_name', models.CharField(blank=True, max_length=200, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='')),
                ('name', models.CharField(max_length=200)),
                ('competitions', models.ManyToManyField(blank=True, to='scores.competition')),
                ('people', models.ManyToManyField(blank=True, to='scores.person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='scores.match')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='scores.person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='person',
            name='teams',
            field=models.ManyToManyField(blank=True, to='scores.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='first_team',
            field=models.ForeignKey(blank=True, default=scores.models.get_default_team_id, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='matches_home', to='scores.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='second_team',
            field=models.ForeignKey(blank=True, default=scores.models.get_default_team_id, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='matches_away', to='scores.team'),
        ),
        migrations.CreateModel(
            name='InMatchEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event_type', models.CharField(choices=[('card', 'Card'), ('substitution', 'Substitution'), ('goal', 'Goal')], max_length=20)),
                ('minute', models.IntegerField(blank=True, null=True)),
                ('detail', models.CharField(blank=True, max_length=250, null=True)),
                ('color', models.CharField(blank=True, choices=[('yellow', 'Yellow'), ('red', 'Red')], help_text="Only applicable if event_type is 'card'.", max_length=10, null=True)),
                ('goal_type', models.CharField(blank=True, choices=[('penalty', 'Penalty'), ('freekick', 'Freekick'), ('open_play', 'Open Play'), ('own_goal', 'Own Goal')], help_text="Only applicable if event_type is 'goal'.", max_length=10, null=True)),
                ('match', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='events', to='scores.match')),
                ('other_player', models.ForeignKey(blank=True, help_text="Only applicable if event_type is 'entry' or 'exit'.", null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='scores.person')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='scores.person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='competition',
            name='teams',
            field=models.ManyToManyField(blank=True, to='scores.team'),
        ),
    ]
